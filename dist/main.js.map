{"version":3,"sources":["../src/main.js"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import moment from 'moment';\nimport 'moment-range';\n\nmoment.fn.dayAfter = function(){\n    return this.clone().add(1, 'days');\n};\n\nmoment.fn.dayBefore = function(){\n    return this.clone().subtract(1, 'days');\n};\n\n// feasts\n\nexport function adventSunday(year){\n    let christmasDay = christmas(year);\n    let adjustment = christmasDay.day() == 0 ? -7: 0; // if Christmas is a Sunday, we need to go back one week further\n\n    return christmasDay.day(-21 + adjustment);\n}\n\nexport function christmas(year){\n    return moment(new Date(year, 11, 25));\n}\n\nexport function epiphany(year){\n    return moment(new Date(year, 0, 8)).day(0); // assumes, per USCCB, that Epiphany is celebrated Sunday between Jan 2 & 8.\n}\n\nexport function baptismOfTheLord(year){\n    return epiphany(year).day(7);\n}\n\nexport function easter(year) {\n    // source: http://www.irt.org/articles/js052/\n\n    let century = Math.floor(year/100);\n    let N = year - 19 * Math.floor(year/19);\n    let K = Math.floor((century - 17)/25);\n    let I = century - Math.floor(century/4) - Math.floor((century - K)/3) + 19 * N + 15;\n    I = I - 30 * Math.floor((I/30));\n    I = I - Math.floor(I/28) * (1 - Math.floor(I/28) * Math.floor(29/(I + 1)) * Math.floor((21 - N)/11));\n    let J = year + Math.floor(year/4) + I + 2 - century + Math.floor(century/4);\n    J = J - 7 * Math.floor(J/7);\n    let L = I - J;\n    let month = 3 + Math.floor((L + 40)/44);\n    let day = L + 28 - 31 * Math.floor(month/4);\n\n    return moment(new Date(year, month - 1, day));\n}\n\nexport function holySaturday(year){\n    return easter(year).subtract(1, 'days');\n}\n\nexport function goodFriday(year){\n    return easter(year).subtract(2, 'days');\n}\n\nexport function holyThursday(year){\n    return easter(year).subtract(3, 'days');\n}\n\nexport function palmSunday(year){\n    return easter(year).subtract(7, 'days');\n}\n\nexport function ashWednesday(year) {\n    return easter(year).subtract(46, 'days');\n}\n\nexport function ascension(year) {\n    return easter(year).add(39, 'days');\n}\n\nexport function pentecost(year) {\n    return easter(year).add(49, 'days');\n}\n\n// Seasons\n\n// ranges do not include their right endpoint, so they go until the day AFTER the season ends.\n// Thus, even though Advent is specified as ending on Christmas,\n// advent(2014).contains(christmas(2014)) returns false.\n\nexport function advent(year){\n    return moment().range(\n        adventSunday(year), // 4th Sunday before Christmas\n        christmas(year)\n    );\n}\n\n// have to split the christmas season because it crosses the year boundary.\nexport function firstChristmasSeason(year){\n    return moment().range(\n        new Date(year, 0, 1),\n        baptismOfTheLord(year).dayAfter() // ends Sunday after Epiphany, the Baptism of the Lord\n    );\n}\n\nexport function secondChristmasSeason(year){\n    return moment().range(\n        christmas(year),\n        new Date(year + 1, 0, 1)\n    )\n}\n\nexport function firstOrdinaryTime(year) {\n    return moment().range(baptismOfTheLord(year).dayAfter(), ashWednesday(year));\n}\n\nexport function lent(year){\n    return moment().range(ashWednesday(year), holyThursday(year));\n}\n\nexport function holyWeek(year){\n    return moment().range(palmSunday(year), easter(year).dayAfter());\n}\n\nexport function triduum(year){\n    return moment().range(holyThursday(year), easter(year));\n}\n\nexport function easterSeason(year){\n    return moment().range(easter(year), pentecost(year).dayAfter());\n}\n\nexport function secondOrdinaryTime(year) {\n    return moment().range(pentecost(year).dayAfter(), adventSunday(year));\n}\n\nlet seasonFuncs = [\n  advent,\n  firstChristmasSeason,\n  secondChristmasSeason,\n  firstOrdinaryTime,\n  lent,\n  triduum,\n  easterSeason,\n  secondOrdinaryTime\n];\n\nexport function seasonOf(date){\n    let momentDate = moment(date);\n    let year = momentDate.year();\n\n    let result;\n\n    for(let i = 0; i < seasonFuncs.length; i++){\n        if(seasonFuncs[i](year).contains(momentDate, true)) {\n            result = seasonFuncs[i];\n            break;\n        }\n    }\n\n    switch(result){\n        case advent: return \"Advent\";\n        case firstChristmasSeason:\n        case secondChristmasSeason: return \"Christmas\";\n        case lent: return \"Lent\";\n        case triduum: return \"Triduum\";\n        case easterSeason: return \"Easter\";\n        case firstOrdinaryTime:\n        case secondOrdinaryTime: return \"Ordinary Time\";\n        default: return \"Undefined Season\"; // this should never happen\n    }\n}\n"]}